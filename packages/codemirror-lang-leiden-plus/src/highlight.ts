import {styleTags, tags as t} from "@lezer/highlight";
import {NodePropSource} from "@lezer/common";

export const leidenPlusHighlighting: NodePropSource = styleTags({
    "Illegible Vestige Vestige VestigStandalone LostLines Gap Vacat": t.comment,
    "Diacritical": [t.emphasis, t.regexp],
    "DiacriticSymbol": [t.strong, t.emphasis, t.regexp],
    "DiacritChar": [t.emphasis],
    "GapNums!": t.number,
    "LineBreak! LineBreakSpecial! LineBreakSpecialWrapped!": t.string,
    "LineBreakWrapped!": [t.string, t.emphasis],
    "Milestone": [t.string, t.strong],
    "Div": t.string,
    "Div/Num Div/Ref Div/Subtype LanguageId": [t.meta, t.emphasis],
    "EditionStart": t.operatorKeyword,
    "Ab": t.meta,
    "Surplus Surplus/Inline/Text!": t.regexp,
    "Abbrev Abbrev/Inline/Text!": t.className,
    "Glyph! Filler!": [t.emphasis, t.number],
    "AbbrevUnresolved AbbrevUnresolved/Inline/Text!": t.typeName,
    "AbbrevInnerEx AbbrevInnerExContent AbbrevInnerExContent/Expansion": t.definition(t.propertyName),
    "AlternateReading ScribalCorrection SpellingCorrection EditorialCorrection ": [t.string, t.emphasis],
    "OrthoReg OrthoReg/Delims": [t.string, t.emphasis],
    "OrthoRegReg": t.heading,
    "Deletion/Delims Deletion/Content/Inline/Text!": t.regexp,
    // "( ) [ ]": t.paren,
    "Supplied Supplied/Inline/Text": t.meta,
    "SuppliedLost SuppliedLost/Inline/Text SuppliedParallelLost SuppliedParallelLost/Inline/Text": t.comment,
    "SuppliedOmitted SuppliedOmitted/Inline/Text": t.annotation,
    "Unclear!": t.bool,
    "NumberSpecial NumberSpecialValue Number": t.number,
    "CertLow AbbrevInnerExContent/QuestionMark": t.attributeValue,
    "EditorialNote EditorialNote/Inline/Text!": t.annotation,
    "Citation!": t.emphasis, // TODO doesn't work
    "Handshift!": t.strong,
    "Figure!": t.emphasis,
    "InsertionAbove InsertionAbove/Inline/Text!": t.annotation,
    "InsertionBelow InsertionBelow/Inline/Text!": t.annotation,
    "InsertionMargin InsertionMargin/Inline/Text!": t.annotation,
    "MarginSling MarginSling/Inline/Text!": t.annotation,
    "MarginUnderline MarginUnderline/Inline/Text!": t.annotation,
    "TextTall TextTall/Inline/Text!": t.annotation,
    "TextSuperscript TextSuperscript/Inline/Text!": t.annotation,
    "TextSubscript TextSubscript/Inline/Text!": t.annotation,
    "Supraline Supraline/Inline/Text!": t.annotation,
    "Supraline Underline/Inline/Text!": t.annotation,
    "Orig Orig/Inline/Text!": t.annotation,
    "Quotation Quotation/Inline/Text!": t.local(t.variableName),
    "Untranscribed!": t.annotation,
    "OmittedLanguage!": t.annotation,
    "IncompletePattern": t.invalid,
})