name: IDP Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      idp-data-key: ${{ steps.submodule-hash.outputs.hash }}
      docker-key: ${{ steps.docker-hash.outputs.hash }}

    env:
      BUILDX_BAKE_ENTITLEMENTS_FS: 0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get submodule hash
        id: submodule-hash
        run: |
          echo "hash=$(git ls-tree HEAD test/data/idp.data | awk '{print $3}')" >> $GITHUB_OUTPUT

      - name: Get Docker compose hash
        id: docker-hash
        run: echo "hash=${{ hashFiles('test/docker-compose.yml') }}" >> $GITHUB_OUTPUT

  prepare-docker:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache Docker layers
      - name: Restore Docker layers
        id: cache-docker-layers-restore
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ needs.setup.outputs.docker-key }}

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Create docker-compose-cache.json
      - name: Create docker-compose-cache.json
        run: |
          echo '{
            "target": {
              "xsugar": {
                "cache-from": [
                  "type=local,src=/tmp/.buildx-cache"
                ],
                "cache-to": [
                  "type=local,dest=/tmp/.buildx-cache"
                ],
                "output": [
                  "type=docker"
                ]
              }
            }
          }' > /tmp/docker-compose-cache.json

      # Pre-build the Docker image
      - name: Pre-build xsugar Docker image
        run: |
          docker buildx bake --allow=fs=/tmp --file test/docker-compose.yml --file /tmp/docker-compose-cache.json
        env:
          DOCKER_BUILDKIT: 1

      # Cache Docker layers
      - name: Save Docker layers
        uses: actions/cache/save@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ needs.setup.outputs.docker-key }}

  prepare-idp-data:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Restore IDP data cache
        id: cache-idp-data-restore
        uses: actions/cache/restore@v4
        with:
          path: test/data/idp.data
          key: idp-data-${{ needs.setup.outputs.idp-data-key }}

      - name: Get IDP Data
        if: steps.cache-idp-data-restore.outputs.cache-hit != 'true'
        run: pnpm test:idp:get-data

      - name: Save IDP data cache
        uses: actions/cache/save@v4
        with:
          path: test/data/idp.data
          key: idp-data-${{ needs.setup.outputs.idp-data-key }}

  prepare-edition:
    runs-on: ubuntu-latest
    needs: [setup, prepare-docker, prepare-idp-data]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # Restore IDP data
      - name: Restore IDP data cache
        uses: actions/cache/restore@v4
        with:
          path: test/data/idp.data
          key: idp-data-${{ needs.setup.outputs.idp-data-key }}
          fail-on-cache-miss: true

      # Restore Docker cache
      - name: Restore Docker layers
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ needs.setup.outputs.docker-key }}
          fail-on-cache-miss: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Restore edition data cache
      - name: Restore edition data cache
        id: cache-edition-data-restore
        uses: actions/cache/restore@v4
        with:
          path: test/data/roundtrips/DDB_EpiDoc_XML
          key: edition-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}

      - name: Prepare edition data
        if: steps.cache-edition-data-restore.outputs.cache-hit != 'true'
        run: pnpm test:idp:prepare:edition
        env:
          DOCKER_BUILDKIT: 1

      - name: Save edition data cache
        if: steps.cache-edition-data-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: test/data/roundtrips/DDB_EpiDoc_XML
          key: edition-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}

      - name: Xsugar cleanup
        if: always()
        run: pnpm test:idp:xsugar:down

  prepare-translation:
    runs-on: ubuntu-latest
    needs: [setup, prepare-docker, prepare-idp-data]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # Restore IDP data
      - name: Restore IDP data cache
        uses: actions/cache/restore@v4
        with:
          path: test/data/idp.data
          key: idp-data-${{ needs.setup.outputs.idp-data-key }}
          fail-on-cache-miss: true

      # Restore Docker cache
      - name: Restore Docker layers
        uses: actions/cache/restore@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ needs.setup.outputs.docker-key }}
          fail-on-cache-miss: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Restore translation data cache
      - name: Restore translation data cache
        id: cache-translation-data-restore
        uses: actions/cache/restore@v4
        with:
          path: test/data/roundtrips/HGV_trans_EpiDoc
          key: translation-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}

      - name: Prepare translation data
        if: steps.cache-translation-data-restore.outputs.cache-hit != 'true'
        run: pnpm test:idp:prepare:translation
        env:
          DOCKER_BUILDKIT: 1

      - name: Save translation data cache
        if: steps.cache-translation-data-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: test/data/roundtrips/HGV_trans_EpiDoc
          key: translation-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}

      - name: Xsugar cleanup
        if: always()
        run: pnpm test:idp:xsugar:down

  run-tests:
    runs-on: ubuntu-latest
    needs: [prepare-edition, prepare-translation]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      # Restore prepared data
      - name: Restore edition data
        uses: actions/cache/restore@v4
        with:
          path: test/data/roundtrips/DDB_EpiDoc_XML
          key: edition-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}
          fail-on-cache-miss: true

      - name: Restore translation data
        uses: actions/cache/restore@v4
        with:
          path: test/data/roundtrips/HGV_trans_EpiDoc
          key: translation-data-${{ needs.setup.outputs.idp-data-key }}-${{ needs.setup.outputs.docker-key }}
          fail-on-cache-miss: true

      - name: Test edition
        run: pnpm test:idp:edition

      - name: Test translation
        run: pnpm test:idp:translation